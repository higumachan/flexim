name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        version: [stable, beta]
    name: Test with Rust ${{ matrix.version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          # Use matrix values in cache key to maintain separate caches per OS and Rust version
          key: ${{ matrix.os }}-${{ matrix.version }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install ubuntu dependency
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y pkg-config libgtk-3-dev
      - name: Install uv with Python 3.12
        if: matrix.os == 'macos-latest'
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: "3.12"
      - name: Create and configure Python virtual environment
        if: matrix.os == 'macos-latest'
        run: |
          uv venv .venv
          source .venv/bin/activate
          echo "PYO3_PYTHON=$(which python)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.version }}
          components: rustfmt, clippy
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets  --workspace --all-features -- -D warnings
      - run: cargo test  --workspace
      - name: Upload snapshots artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-snapshots
          path: tests/snapshots
