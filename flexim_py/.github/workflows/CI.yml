name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install uv with Python 3.12
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"
        python-version: "3.12"
    - name: Configure PYO3_PYTHON
      run: echo "PYO3_PYTHON=$(which python)" >> $GITHUB_ENV
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter
      env:
        PYO3_PYTHON: ${{ env.PYO3_PYTHON }}
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
